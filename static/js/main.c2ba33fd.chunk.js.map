{"version":3,"sources":["components/SearchBox.js","components/Card.js","components/CardList.js","components/ErrorBoundary.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchfield","searchChange","className","type","placeholder","onChange","Card","name","email","id","alt","src","CardList","robots","map","user","i","ErrorBoundary","props","state","hasError","error","info","this","setState","children","Component","Scroll","style","overflowY","border","height","App","onsearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"4NAgBeA,EAbC,SAAC,GAA6B,EAA5BC,YAA6B,IAAjBC,EAAgB,EAAhBA,aAC1B,OACI,qBAAKC,UAAU,MAAf,SACI,uBACAA,UAAU,mCACVC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCIPK,EAZJ,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,KAAKC,EAAY,EAAZA,MAAMC,EAAM,EAANA,GACpB,OACI,sBAAKP,UAAU,sDAAf,UACI,qBAAKQ,IAAI,SAASC,IAAG,gCAA2BF,EAA3B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCYLI,EAjBA,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACb,OACI,8BAEMA,EAAOC,KAAI,SAACC,EAAKC,GACf,OAAQ,cAAC,EAAD,CAEPP,GAAII,EAAOG,GAAGP,GACdF,KAAMM,EAAOG,GAAGT,KACjBC,MAAOK,EAAOG,GAAGR,OAHXQ,SCaPC,E,kDAlBX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAM,CACPC,UAAS,GAHC,E,qDAOlB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAE5B,WACI,OAAGG,KAAKJ,MAAMC,SACH,0DAEJG,KAAKL,MAAMO,a,GAfEC,aCObC,EARF,SAACT,GACV,OACI,qBAAKU,MAAO,CAACC,UAAU,SAASC,OAAO,kBAAkBC,OAAO,SAAhE,SACKb,EAAMO,YC8CJO,G,wDAzCX,aAAc,IAAD,8BACT,gBAcJC,eAAe,SAACC,GACZ,EAAKV,SAAS,CAACxB,YAAakC,EAAMC,OAAOC,SAdzC,EAAKjB,MAAM,CACPN,OAAQ,GACRb,YAAY,IAJP,E,qDAQb,WAAoB,IAAD,OACfqC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKjB,SAAS,CAACX,OAAO4B,S,oBAOvC,WAAU,IAAD,EACsBlB,KAAKJ,MAAzBN,EADF,EACEA,OAAOb,EADT,EACSA,YACR0C,EAAe7B,EAAO8B,QAAO,SAAAC,GAC/B,OAAOA,EAAMrC,KAAKsC,cAAcC,SAAS9C,EAAY6C,kBAEzD,OAAgC,IAA7BtB,KAAKJ,MAAMN,OAAOkC,OACV,mEAGP,sBAAK7C,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWD,aAAcsB,KAAKU,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUpB,OAAQ6B,e,GAjCpBhB,cCGHsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.c2ba33fd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst SearchBox=({searchfield,searchChange})=>{\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n            className=\"pa3 ba b--green bg-lightest-blue\"\r\n            type='search' \r\n            placeholder='search robots'\r\n            onChange={searchChange}\r\n            /> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Card=({name,email,id})=>{\r\n    return (\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img alt=\"robots\" src={` https://robohash.org/${id}?200x200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;    ","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList=({robots})=>{\r\n    return(\r\n        <div>\r\n            {\r\n              robots.map((user,i)=> {\r\n                return (<Card\r\n                 key={i} \r\n                 id={robots[i].id} \r\n                 name={robots[i].name}\r\n                email={robots[i].email}/>\r\n                    )\r\n             }) \r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React,{Component} from 'react';\r\n\r\n\r\nclass ErrorBoundary extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            hasError:false\r\n        } \r\n    }\r\n\r\n    componentDidCatch(error,info){\r\n        this.setState({hasError:true})\r\n    }\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Ooooops it's not good :(</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React from 'react';\r\n\r\nconst Scroll=(props)=>{\r\n    return (\r\n        <div style={{overflowY:'scroll',border:'5px solid black',height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React,{Component} from 'react';\r\nimport SearchBox from '../components/SearchBox';\r\nimport CardList from '../components/CardList';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n\r\n\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            robots: [],\r\n            searchfield:''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=>response.json())\r\n        .then(users=>this.setState({robots:users}));\r\n    }\r\n\r\n\r\n    onsearchChange=(event)=>{\r\n        this.setState({searchfield: event.target.value});\r\n    }\r\n    render() {\r\n        const {robots,searchfield}=this.state;\r\n        const filteredRobots=robots.filter(robot=>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        });\r\n        if(this.state.robots.length === 0){\r\n            return <h1>Loading..........................</h1>\r\n        }else{\r\n        return(\r\n            <div className=\"tc\">\r\n            <h1 className='f1'>RoboFriends</h1>\r\n            <SearchBox searchChange={this.onsearchChange}/>\r\n            <Scroll>\r\n                <ErrorBoundary>\r\n                    <CardList robots={filteredRobots}/>\r\n                </ErrorBoundary>\r\n            </Scroll>\r\n            </div>\r\n        );\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}